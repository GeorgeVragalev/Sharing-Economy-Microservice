version: '3.8'

services:
  inventory-service:
    container_name: "inventory"
    ports:
      - "5217:80"
    build:
      context: ./SharingEconomyMicroservices
      dockerfile: Dockerfile-inventory
    environment:
      - ConnectionStrings__DefaultConnection=User ID=postgres;Password=postgres;Server=localhost;Port=5433;Database=InventoryAPI; IntegratedSecurity=true;Pooling=true;
      - ASPNETCORE_URLS=http://+:80
    depends_on: 
      - inventory-db
  
  inventory-db:
    image: postgres:latest
    container_name: "inventory-db"
    environment: 
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=InventoryAPI
    ports:
      - "5433:5432"
    restart: "always"
    volumes:
      - inventory-db-data:/var/lib/postgresql/data


  order-service:
    container_name: "order"
    ports:
      - "5143:80"
    build:
      context: ./SharingEconomyMicroservices
      dockerfile: Dockerfile-order
    environment:
      - ConnectionStrings__DefaultConnection=User ID=postgres;Password=postgres;Server=localhost;Port=5433;Database=OrderAPI; IntegratedSecurity=true;Pooling=true;
      - ASPNETCORE_URLS=http://+:80
    depends_on:
      - order-db

  order-db:
    image: postgres:latest
    container_name: "order-db"
    environment:
      - POSTGRES_DB=OrderAPI
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5434:5432"
    restart: "always"
    volumes:
      - order-db-data:/var/lib/postgresql/data

volumes:
  inventory-db-data:
  order-db-data:

networks:
  default:
    external:
      name: nginx-network
