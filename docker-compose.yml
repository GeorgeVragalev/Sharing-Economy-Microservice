version: '3.8'

services:
  inventory-service:
    container_name: "inventory"
    ports:
      - "5217:80"
    build:
      context: ./SharingEconomyMicroservices
      dockerfile: Dockerfile-inventory
    volumes:
      - ./SharingEconomyMicroservices:/appstore
    environment:
      - ConnectionStrings__DefaultConnection=Host=inventory-db;Username=postgres;Password=postgres;Port=5432;Database=InventoryAPI;Pooling=true;
      - ASPNETCORE_URLS=http://+:80
    depends_on: 
      - inventory-db
    networks:
      - shared_app_network
  
  inventory-db:
    image: postgres:latest
    container_name: "inventory-db"
    environment: 
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=InventoryAPI
    ports:
      - "5433:5432"
    restart: "always"
    volumes:
      - inventory-db-data:/var/lib/postgresql/data
    networks:
      - shared_app_network


  order-service:
    container_name: "order"
    ports:
      - "5143:80"
    build:
      context: ./SharingEconomyMicroservices
      dockerfile: Dockerfile-order
    volumes:
      - ./SharingEconomyMicroservices:/app
    environment:
      - ConnectionStrings__DefaultConnection=Host=order-db;Username=postgres;Password=postgres;Port=5432;Database=OrderAPI;Pooling=true;
      - ASPNETCORE_URLS=http://+:80
    depends_on:
      - order-db
    networks:
      - shared_app_network

  order-db:
    image: postgres:latest
    container_name: "order-db"
    environment:
      - POSTGRES_DB=OrderAPI
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5434:5432"
    restart: "always"
    volumes:
      - order-db-data:/var/lib/postgresql/data
    networks:
      - shared_app_network

  redis:
    image: "redis:latest"
    container_name: "redis"
    ports:
      - "6379:6379"
    networks:
      - shared_app_network


  api-gateway:
    container_name: "api-gateway"
    ports:
      - "5000:5000"
    build:
      context: ./APIGateway
      dockerfile: Dockerfile
    volumes:
      - ./APIGateway:/app
    depends_on:
      - inventory-service
      - order-service
      - redis
    networks:
      - shared_app_network

volumes:
  inventory-db-data:
  order-db-data:

networks:
  shared_app_network:
    driver: bridge
